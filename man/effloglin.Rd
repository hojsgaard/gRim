% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/effloglin.R
\name{effloglin}
\alias{effloglin}
\title{Fitting Log-Linear Models by Message Passing}
\usage{
effloglin(table, margin, fit = FALSE, eps = 0.01, iter = 20,
  print = TRUE)
}
\arguments{
\item{table}{A contingency table}

\item{margin}{A generating class for a hierarchical log--linear model}

\item{fit}{If TRUE, the fitted values are returned.}

\item{eps}{Convergence limit; see 'details' below.}

\item{iter}{Maximum number of iterations allowed}

\item{print}{If TRUE, iteration details are printed.}
}
\value{
A list with compnents \item{comp1 }{Description of 'comp1'}
\item{comp2 }{Description of 'comp2'} ...
}
\description{
Fit log-linear models to multidimensional contingency tables by Iterative
Proportional Fitting.
}
\details{
The function differs from \code{loglin} in that 1) data can be given in the
form of a list of sufficient marginals and 2) the model is fitted only on
the cliques of the triangulated interaction graph of the model. This means
that the full table is not fitted, which means that \code{effloglin} is
efficient (in terms of storage requirements). However \code{effloglin} is
implemented entirely in R and is therefore slower than \code{loglin}.
}
\examples{

data(reinis)
glist <-list(c("smoke", "mental"), c("mental", "phys"), c("phys", "systol"
), c("systol", "smoke"))

stab <- lapply(glist, function(gg) tableMargin(reinis, gg))
fv3 <- effloglin(stab, glist, print=FALSE)



}
\author{
S<f8>ren H<f8>jsgaard, \email{sorenh@math.aau.dk}
}
\seealso{
\code{\link{loglin}}
}
\keyword{models}

